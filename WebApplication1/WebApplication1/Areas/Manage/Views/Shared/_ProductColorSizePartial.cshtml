@model Product
@if (Model?.ProductColorSizes?.Count() > 0)
{
    for (int i = 0; i < Model.ProductColorSizes.Count(); i++)
    {
        <div class="row">
            <div class="form-group col-lg-4">
                <label>Select Color</label>
                <select name="ColorIds[]" class="form-control" asp-items="@new SelectList(ViewBag.Colors, nameof(Color.Id), nameof(Color.Name),Model.ProductColorSizes.ElementAt(i).Color.Id)">
                </select>
            </div>
            <div class="form-group col-lg-4">
                <label>Size</label>
                <select name="SizeIds[]" class="form-control" asp-items="@new SelectList(ViewBag.Sizes, nameof(Size.Id), nameof(Size.Name),Model.ProductColorSizes.ElementAt(i).Size.Id)">
                </select>
            </div>
            <div class="form-group col-lg-4">
                <label>Count</label>
                <input name="Counts[]" asp-for="@Model.ProductColorSizes.ElementAt(i).Count" class="form-control" placeholder="Enter Count">
            </div>
            <div class="text-danger" asp-validation-summary="ModelOnly"></div>
        </div>
    }
}
else
{
    <div class="row">
        <div class="form-group col-lg-4">
            <label>Select Color</label>
            <select name="ColorIds[]" class="form-control" asp-items="@new SelectList(ViewBag.Colors, nameof(Color.Id), nameof(Color.Name))">
            </select>
        </div>
        <div class="form-group col-lg-4">
            <label>Size</label>
            <select name="SizeIds[]" class="form-control" asp-items="@new SelectList(ViewBag.Sizes, nameof(Size.Id), nameof(Size.Name))">
            </select>
        </div>
        <div class="form-group col-lg-4">
            <label>Count</label>
            <input name="Counts[]" type="number" class="form-control" placeholder="Enter Count">
        </div>
        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
    </div>
}
